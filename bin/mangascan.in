#!@PYTHON@

import sys
import os
import locale
import gettext


sys.path.insert(1, '@pythondir@')

localedir = '@localedir@'
builddir = os.environ.get('MESON_BUILD_ROOT')
if builddir:
    os.environ['GSETTINGS_SCHEMA_DIR'] = os.path.join(localedir, '../glib-2.0/schemas/')
    sys.dont_write_bytecode = True
    sys.path.insert(1, os.environ['MESON_SOURCE_ROOT'])

from gi.repository import Gio

resource = Gio.resource_load(os.path.join('@pkgdatadir@', '@appid@.gresource'))
Gio.Resource._register(resource)

from mangascan.application import Application
from mangascan.model import init_db

def install_excepthook():
    """ Make sure we exit when an unhandled exception occurs. """
    from gi.repository import Gtk
    old_hook = sys.excepthook

    def new_hook(etype, evalue, etb):
        old_hook(etype, evalue, etb)
        while Gtk.main_level():
            Gtk.main_quit()
        sys.exit()
    sys.excepthook = new_hook

if __name__ == "__main__":
    install_excepthook()

    locale.bindtextdomain('@projectname@', localedir)
    locale.textdomain('@projectname@')
    gettext.bindtextdomain('@projectname@', localedir)
    gettext.textdomain('@projectname@')

    if @PROFILE@ == 'Devel':
    	Application.development_mode = True
    	Application.application_id = '@appid@Devel'
    else:
    	Application.development_mode = False

    init_db()

    app = Application()

    try:
        status = app.run(sys.argv)
    except SystemExit as e:
        status = e.code

    sys.exit(status)
